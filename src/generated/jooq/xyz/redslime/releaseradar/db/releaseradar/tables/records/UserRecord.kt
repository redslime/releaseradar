/*
 * This file is generated by jOOQ.
 */
package xyz.redslime.releaseradar.db.releaseradar.tables.records


import org.jooq.Field
import org.jooq.Record1
import org.jooq.Record6
import org.jooq.Row6
import org.jooq.impl.UpdatableRecordImpl

import xyz.redslime.releaseradar.db.releaseradar.tables.User


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class UserRecord() : UpdatableRecordImpl<UserRecord>(User.USER), Record6<Long?, String?, String?, String?, String?, Boolean?> {

    open var id: Long?
        set(value): Unit = set(0, value)
        get(): Long? = get(0) as Long?

    open var timezone: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var refreshToken: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var playlistType: String?
        set(value): Unit = set(3, value)
        get(): String? = get(3) as String?

    open var playlistData: String?
        set(value): Unit = set(4, value)
        get(): String? = get(4) as String?

    open var enlisted: Boolean?
        set(value): Unit = set(5, value)
        get(): Boolean? = get(5) as Boolean?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    public override fun key(): Record1<Long?> = super.key() as Record1<Long?>

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    public override fun fieldsRow(): Row6<Long?, String?, String?, String?, String?, Boolean?> = super.fieldsRow() as Row6<Long?, String?, String?, String?, String?, Boolean?>
    public override fun valuesRow(): Row6<Long?, String?, String?, String?, String?, Boolean?> = super.valuesRow() as Row6<Long?, String?, String?, String?, String?, Boolean?>
    public override fun field1(): Field<Long?> = User.USER.ID
    public override fun field2(): Field<String?> = User.USER.TIMEZONE
    public override fun field3(): Field<String?> = User.USER.REFRESH_TOKEN
    public override fun field4(): Field<String?> = User.USER.PLAYLIST_TYPE
    public override fun field5(): Field<String?> = User.USER.PLAYLIST_DATA
    public override fun field6(): Field<Boolean?> = User.USER.ENLISTED
    public override fun component1(): Long? = id
    public override fun component2(): String? = timezone
    public override fun component3(): String? = refreshToken
    public override fun component4(): String? = playlistType
    public override fun component5(): String? = playlistData
    public override fun component6(): Boolean? = enlisted
    public override fun value1(): Long? = id
    public override fun value2(): String? = timezone
    public override fun value3(): String? = refreshToken
    public override fun value4(): String? = playlistType
    public override fun value5(): String? = playlistData
    public override fun value6(): Boolean? = enlisted

    public override fun value1(value: Long?): UserRecord {
        set(0, value)
        return this
    }

    public override fun value2(value: String?): UserRecord {
        set(1, value)
        return this
    }

    public override fun value3(value: String?): UserRecord {
        set(2, value)
        return this
    }

    public override fun value4(value: String?): UserRecord {
        set(3, value)
        return this
    }

    public override fun value5(value: String?): UserRecord {
        set(4, value)
        return this
    }

    public override fun value6(value: Boolean?): UserRecord {
        set(5, value)
        return this
    }

    public override fun values(value1: Long?, value2: String?, value3: String?, value4: String?, value5: String?, value6: Boolean?): UserRecord {
        this.value1(value1)
        this.value2(value2)
        this.value3(value3)
        this.value4(value4)
        this.value5(value5)
        this.value6(value6)
        return this
    }

    /**
     * Create a detached, initialised UserRecord
     */
    constructor(id: Long? = null, timezone: String? = null, refreshToken: String? = null, playlistType: String? = null, playlistData: String? = null, enlisted: Boolean? = null): this() {
        this.id = id
        this.timezone = timezone
        this.refreshToken = refreshToken
        this.playlistType = playlistType
        this.playlistData = playlistData
        this.enlisted = enlisted
        resetChangedOnNotNull()
    }
}
