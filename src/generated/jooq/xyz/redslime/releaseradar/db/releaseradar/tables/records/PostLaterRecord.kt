/*
 * This file is generated by jOOQ.
 */
package xyz.redslime.releaseradar.db.releaseradar.tables.records


import org.jooq.Record1
import org.jooq.impl.UpdatableRecordImpl

import xyz.redslime.releaseradar.db.releaseradar.tables.PostLater


/**
 * This class is generated by jOOQ.
 */
@Suppress("UNCHECKED_CAST")
open class PostLaterRecord() : UpdatableRecordImpl<PostLaterRecord>(PostLater.POST_LATER) {

    open var id: Int?
        set(value): Unit = set(0, value)
        get(): Int? = get(0) as Int?

    open var contentId: String?
        set(value): Unit = set(1, value)
        get(): String? = get(1) as String?

    open var timezone: String?
        set(value): Unit = set(2, value)
        get(): String? = get(2) as String?

    open var channelId: Long?
        set(value): Unit = set(3, value)
        get(): Long? = get(3) as Long?

    open var userChannel: Boolean?
        set(value): Unit = set(4, value)
        get(): Boolean? = get(4) as Boolean?

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    override fun key(): Record1<Int?> = super.key() as Record1<Int?>

    /**
     * Create a detached, initialised PostLaterRecord
     */
    constructor(id: Int? = null, contentId: String? = null, timezone: String? = null, channelId: Long? = null, userChannel: Boolean? = null): this() {
        this.id = id
        this.contentId = contentId
        this.timezone = timezone
        this.channelId = channelId
        this.userChannel = userChannel
        resetChangedOnNotNull()
    }
}
